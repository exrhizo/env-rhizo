#!/usr/bin/env python

import re
import sys
import os

def convert_page_link_to_tag(page_link):
    tag = re.sub(r'\[\[(.*?)\]\]', r'\1', page_link)
    tag = tag.lower()
    tag = re.sub(r'\s+(\w)', lambda m: m.group(1).upper(), tag)
    return tag

def convert_in_file(file_path, a, b, dry_run=False):
    file_changed = False
    with open(file_path, 'r') as file:
        lines = file.readlines()
    converted_lines = []
    for line in lines:
        converted = line.replace(a, b)
        converted_lines.append(converted)
        if converted != line:
            file_changed = True
    if not dry_run:
        with open(file_path, 'w') as file:
            file.writelines(converted_lines)
    return file_changed


def convert_in_directory(directory_path, orig, new):
    files_to_convert = []
    for root, dirs, files in os.walk(directory_path):
        for file in files:
            file_path = os.path.join(root, file)
            if file.endswith(".md"):
                if convert_in_file(file_path, orig, new, dry_run=True):
                    files_to_convert.append(file_path)

    if not files_to_convert:
        print("No .md files found that match.")
        return

    print(f"{len(files_to_convert)} matching .md files found.")
    confirmation = input("\nConvert? (y/n): ")
    if confirmation.lower() != "y":
        print("No changes will be made.")
        return

    for file_path in files_to_convert:
        print(f"Converting {file_path}")
        convert_in_file(file_path, orig, new)

if __name__ == '__main__':
    page_link = sys.argv[1].strip("'")
    tag = convert_page_link_to_tag(page_link) if len(sys.argv) < 3 else sys.argv[2]
    page_link = f"[[{page_link}]]"
    tag = f"#{tag}"
    print(f"Converting page link '{page_link}' to tag '{tag}'")
    current_directory = os.getcwd()
    convert_in_directory(current_directory, page_link, tag)